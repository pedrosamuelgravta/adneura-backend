"""add core_idea, narrative_hook, why_it_works, goal, campaign_name to triggers

Revision ID: f95a9d19407b
Revises: f57541e2cd8e
Create Date: 2025-05-26 21:03:11.144807

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "f95a9d19407b"
down_revision: Union[str, None] = "f57541e2cd8e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "triggers",
        sa.Column("core_idea", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "triggers",
        sa.Column("narrative_hook", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "triggers",
        sa.Column("why_it_works", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column(
        "triggers", sa.Column("goal", sqlmodel.sql.sqltypes.AutoString(), nullable=True)
    )
    op.add_column(
        "triggers",
        sa.Column("campaign_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("triggers", "campaign_name")
    op.drop_column("triggers", "goal")
    op.drop_column("triggers", "why_it_works")
    op.drop_column("triggers", "narrative_hook")
    op.drop_column("triggers", "core_idea")
    # ### end Alembic commands ###
